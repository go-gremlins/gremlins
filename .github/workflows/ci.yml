name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Validate source code with linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
          cache-dependency-path: go.sum
        # Run golangci-lint without action because it is not ready yet fo go1.19
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.47.3
      - name: Run golangci-lint
        run: golangci-lint run --version --verbose --out-format=github-actions

  test:
    name: Run the tests suite
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Run tests with coverage
        run: make cover
      - name: Report coverage to CodeCov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage.out
          flags: unittests
          env_vars: OS
      - name: Report coverage to CodeClimate
        uses: paambaati/codeclimate-action@v3.0.0
        continue-on-error: true
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          prefix: github.com/go-gremlins/gremlins
          coverageLocations: |
            ${{github.workspace}}/coverage.out:gocov
      - name: Report coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        continue-on-error: true
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.out
          language: go
          force-coverage-parser: go
  documentation:
    name: Build documentation
    if: ${{ github.event_name != 'pull_request' }}
    needs: test
    uses: ./.github/workflows/docs.yml
    with:
      short_version: next
      full_version: x.y.z
      default: false
